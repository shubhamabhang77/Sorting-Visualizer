{"ast":null,"code":"import _slicedToArray from\"/home/shubham/HTML workspace/projects/Sorting-Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/home/shubham/HTML workspace/projects/Sorting-Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/shubham/HTML workspace/projects/Sorting-Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/shubham/HTML workspace/projects/Sorting-Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/shubham/HTML workspace/projects/Sorting-Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/shubham/HTML workspace/projects/Sorting-Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import\"./Sorting.css\";import getmergesortanimations from\"../Algorithms/mergeSort\";import _bubbleSort from\"../Algorithms/bubbleSort\";import _insertionSort from\"../Algorithms/insertionSort\";import getQuickSortAnimations from\"../Algorithms/quickSort\";import _selectionSort from\"../Algorithms/selectionSort\";import Footer from\"./Footer.js\";var COMPARISON_COLOR=\"green\";var SWAP_COLOR=\"red\";var ORIGINAL_COLOR=\"#008CBA\";var ARRAY_SIZE=200;var AUTOMATION_SPEED=1;var flag=false;var Sorting=/*#__PURE__*/function(_React$Component){_inherits(Sorting,_React$Component);var _super=_createSuper(Sorting);function Sorting(){var _this;_classCallCheck(this,Sorting);_this=_super.call(this);_this.state={array:[]};_this.resetArray=_this.resetArray.bind(_assertThisInitialized(_this));_this.mergeSort=_this.mergeSort.bind(_assertThisInitialized(_this));_this.quickSort=_this.quickSort.bind(_assertThisInitialized(_this));_this.insertionSort=_this.insertionSort.bind(_assertThisInitialized(_this));_this.bubbleSort=_this.bubbleSort.bind(_assertThisInitialized(_this));_this.selectionSort=_this.selectionSort.bind(_assertThisInitialized(_this));_this.getText=_this.getText.bind(_assertThisInitialized(_this));return _this;}_createClass(Sorting,[{key:\"componentDidMount\",value:function componentDidMount(){this.resetArray();}},{key:\"resetArray\",value:function resetArray(){var array=[];var i=ARRAY_SIZE;while(i--){array.push(randomIntFromInterval(5,500));}this.setState({array:array});}},{key:\"mergeSort\",value:function mergeSort(){var _this2=this;var arrayBars=document.getElementsByClassName(\"array-bar\");var _getmergesortanimatio=getmergesortanimations(this.state.array),_getmergesortanimatio2=_slicedToArray(_getmergesortanimatio,2),sortedArray=_getmergesortanimatio2[0],animations=_getmergesortanimatio2[1];var testSortedArray=this.state.array.slice().sort(function(a,b){return a-b;});testingAlgorithm(testSortedArray,sortedArray)?console.log(\"array is sorted properly\"):console.log(\"array is not sorted properly\");var length=animations.length;var _loop=function _loop(i){var colorChange=i%3!==2;if(colorChange){var barOne=animations[i][1];var barTwo=animations[i][2];var barOneStyle=arrayBars[barOne].style;var barTwoStyle=arrayBars[barTwo].style;var color=i%3===0?SWAP_COLOR:ORIGINAL_COLOR;setTimeout(function(){barOneStyle.backgroundColor=color;barTwoStyle.backgroundColor=color;},i*AUTOMATION_SPEED);}else{var _barOne=animations[i][1];var _barOneStyle=arrayBars[_barOne].style;setTimeout(function(){_barOneStyle.height=animations[i][2]+'px';},i*AUTOMATION_SPEED);}if(i===length-1){setTimeout(function(){_this2.setState({array:sortedArray});},(i+1)*AUTOMATION_SPEED);}};for(var i=0;i<length;i++){_loop(i);}}},{key:\"quickSort\",value:function quickSort(){var _this3=this;var arrayBars=document.getElementsByClassName(\"array-bar\");var _getQuickSortAnimatio=getQuickSortAnimations(this.state.array),_getQuickSortAnimatio2=_slicedToArray(_getQuickSortAnimatio,2),sortedArray=_getQuickSortAnimatio2[0],animations=_getQuickSortAnimatio2[1];var testSortedArray=this.state.array.slice().sort(function(a,b){return a-b;});testingAlgorithm(testSortedArray,sortedArray)?console.log(\"array is sorted properly\"):console.log(\"array is not sorted properly\");var length=animations.length;var _loop2=function _loop2(i){var colorChange=i%2===0;var barOne=animations[i][1];var barTwo=animations[i][2];var barOneStyle=arrayBars[barOne].style;var barTwoStyle=arrayBars[barTwo].style;if(colorChange){if(animations[i][0]==='c'){var barThree=animations[i][3];var barThreeStyle=arrayBars[barThree].style;setTimeout(function(){barOneStyle.backgroundColor=COMPARISON_COLOR;barTwoStyle.backgroundColor='yellow';barThreeStyle.backgroundColor=COMPARISON_COLOR;},i*AUTOMATION_SPEED);}else if(animations[i][0]==='s'){setTimeout(function(){barOneStyle.backgroundColor=SWAP_COLOR;barTwoStyle.backgroundColor=SWAP_COLOR;barOneStyle.height=animations[i][3]+'px';barTwoStyle.height=animations[i][4]+'px';},i*AUTOMATION_SPEED);}}else{if(animations[i][0]==='c'){var _barThree=animations[i][3];var _barThreeStyle=arrayBars[_barThree].style;setTimeout(function(){barOneStyle.backgroundColor=ORIGINAL_COLOR;barTwoStyle.backgroundColor=ORIGINAL_COLOR;_barThreeStyle.backgroundColor=ORIGINAL_COLOR;},i*AUTOMATION_SPEED);}else if(animations[i][0]==='s'){setTimeout(function(){barOneStyle.backgroundColor=ORIGINAL_COLOR;barTwoStyle.backgroundColor=ORIGINAL_COLOR;},i*AUTOMATION_SPEED);}}if(i===length-1){setTimeout(function(){_this3.setState({array:sortedArray});},(i+1)*AUTOMATION_SPEED);}};for(var i=0;i<length;i++){_loop2(i);}}},{key:\"selectionSort\",value:function selectionSort(){var _this4=this;var arrayBars=document.getElementsByClassName(\"array-bar\");var testSortedArray=this.state.array.slice().sort(function(a,b){return a-b;});var _selectionSort2=_selectionSort(this.state.array,arrayBars),_selectionSort3=_slicedToArray(_selectionSort2,2),sortedArray=_selectionSort3[0],animations=_selectionSort3[1];testingAlgorithm(testSortedArray,sortedArray)?console.log(\"array is sorted properly\"):console.log(\"array is not sorted properly\");var length=animations.length;var _loop3=function _loop3(i){var colorChange=i%2===0;var barOne=animations[i][1];var barTwo=animations[i][2];var barOneStyle=arrayBars[barOne].style;var barTwoStyle=arrayBars[barTwo].style;if(colorChange){if(animations[i][0]==='c'){setTimeout(function(){barOneStyle.backgroundColor=COMPARISON_COLOR;barTwoStyle.backgroundColor=COMPARISON_COLOR;},i*AUTOMATION_SPEED);}else if(animations[i][0]==='s'){setTimeout(function(){barOneStyle.backgroundColor=SWAP_COLOR;barTwoStyle.backgroundColor=SWAP_COLOR;barOneStyle.height=animations[i][3]+'px';barTwoStyle.height=animations[i][4]+'px';},i*AUTOMATION_SPEED);}}else{if(animations[i][0]==='c'){setTimeout(function(){barOneStyle.backgroundColor=ORIGINAL_COLOR;barTwoStyle.backgroundColor=ORIGINAL_COLOR;},i*AUTOMATION_SPEED);}else if(animations[i][0]==='s'){setTimeout(function(){barOneStyle.backgroundColor=ORIGINAL_COLOR;barTwoStyle.backgroundColor=ORIGINAL_COLOR;},i*AUTOMATION_SPEED);}}if(i===length-1){setTimeout(function(){_this4.setState({array:sortedArray});},(i+1)*AUTOMATION_SPEED);}};for(var i=0;i<length;i++){_loop3(i);}}},{key:\"bubbleSort\",value:function bubbleSort(){var _this5=this;var arrayBars=document.getElementsByClassName(\"array-bar\");var testSortedArray=this.state.array.slice().sort(function(a,b){return a-b;});var _bubbleSort2=_bubbleSort(this.state.array,arrayBars),_bubbleSort3=_slicedToArray(_bubbleSort2,2),sortedArray=_bubbleSort3[0],animations=_bubbleSort3[1];testingAlgorithm(testSortedArray,sortedArray)?console.log(\"array is sorted properly\"):console.log(\"array is not sorted properly\");var length=animations.length;var _loop4=function _loop4(i){var colorChange=i%2===0;var barOne=animations[i][1];var barTwo=animations[i][2];var barOneStyle=arrayBars[barOne].style;var barTwoStyle=arrayBars[barTwo].style;if(colorChange){if(animations[i][0]==='c'){setTimeout(function(){barOneStyle.backgroundColor=COMPARISON_COLOR;barTwoStyle.backgroundColor=COMPARISON_COLOR;},i*AUTOMATION_SPEED);}else if(animations[i][0]==='s'){setTimeout(function(){barOneStyle.backgroundColor=SWAP_COLOR;barTwoStyle.backgroundColor=SWAP_COLOR;barOneStyle.height=animations[i][3]+'px';barTwoStyle.height=animations[i][4]+'px';},i*AUTOMATION_SPEED);}}else{if(animations[i][0]==='c'){setTimeout(function(){barOneStyle.backgroundColor=ORIGINAL_COLOR;barTwoStyle.backgroundColor=ORIGINAL_COLOR;},i*AUTOMATION_SPEED);}else if(animations[i][0]==='s'){setTimeout(function(){barOneStyle.backgroundColor=ORIGINAL_COLOR;barTwoStyle.backgroundColor=ORIGINAL_COLOR;},i*AUTOMATION_SPEED);}}if(i===length-1){setTimeout(function(){_this5.setState({array:sortedArray});},(i+1)*AUTOMATION_SPEED);}};for(var i=0;i<length;i++){_loop4(i);}}},{key:\"insertionSort\",value:function insertionSort(){var _this6=this;var arrayBars=document.getElementsByClassName(\"array-bar\");var testSortedArray=this.state.array.slice().sort(function(a,b){return a-b;});var _insertionSort2=_insertionSort(this.state.array,arrayBars),_insertionSort3=_slicedToArray(_insertionSort2,2),sortedArray=_insertionSort3[0],animations=_insertionSort3[1];testingAlgorithm(testSortedArray,sortedArray)?console.log(\"array is sorted properly\"):console.log(\"array is not sorted properly\");var length=animations.length;var _loop5=function _loop5(i){var colorChange=i%2===0;var barOne=animations[i][1];var barTwo=animations[i][2];var barOneStyle=arrayBars[barOne].style;var barTwoStyle=arrayBars[barTwo].style;if(colorChange){if(animations[i][0]==='c'){setTimeout(function(){barOneStyle.backgroundColor=COMPARISON_COLOR;barTwoStyle.backgroundColor=COMPARISON_COLOR;},i*AUTOMATION_SPEED);}else if(animations[i][0]==='s'){setTimeout(function(){barOneStyle.backgroundColor=SWAP_COLOR;barTwoStyle.backgroundColor=SWAP_COLOR;barOneStyle.height=animations[i][3]+'px';barTwoStyle.height=animations[i][4]+'px';},i*AUTOMATION_SPEED);}}else{if(animations[i][0]==='c'){setTimeout(function(){barOneStyle.backgroundColor=ORIGINAL_COLOR;barTwoStyle.backgroundColor=ORIGINAL_COLOR;},i*AUTOMATION_SPEED);}else if(animations[i][0]==='s'){setTimeout(function(){barOneStyle.backgroundColor=ORIGINAL_COLOR;barTwoStyle.backgroundColor=ORIGINAL_COLOR;},i*AUTOMATION_SPEED);}}if(i===length-1){setTimeout(function(){_this6.setState({array:sortedArray});},(i+1)*AUTOMATION_SPEED);}};for(var i=0;i<length;i++){_loop5(i);}}},{key:\"getText\",value:function getText(event){flag=true;var x=document.getElementById(\"array-size\").value;var y=document.getElementById(\"speed\").value;if(isNaN(x)){alert('Please, Enter a number');}else if(x<=400&x>=10){ARRAY_SIZE=Number(x);this.resetArray();}else{alert(\"Please, Enter Array Size a number between 10 and 1000\");}if(isNaN(y)){alert('Please, Enter a number');}else if(y<=2000&y>=1){AUTOMATION_SPEED=y;this.resetArray();}else{alert(\"Please, Enter Automation Speed a number between 10 and 2000\");}}},{key:\"render\",value:function render(){var tem,tem1;if(flag){tem=\"The Array size is \"+ARRAY_SIZE;tem1=\"The Automation speed is \"+AUTOMATION_SPEED;}else{tem=\"*Default size of Array is 200\";tem1=\"*Default speed of Automation is 1\";}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"button-container\"},/*#__PURE__*/React.createElement(\"button\",{id:\"button\",float:\"left\",onClick:this.resetArray},\"Reset the Array\"),/*#__PURE__*/React.createElement(\"button\",{id:\"button\",onClick:this.mergeSort},\"Merge Sort\"),/*#__PURE__*/React.createElement(\"button\",{id:\"button\",onClick:this.quickSort},\"Quick Sort\"),/*#__PURE__*/React.createElement(\"button\",{id:\"button\",onClick:this.bubbleSort},\"Bubble Sort\"),/*#__PURE__*/React.createElement(\"button\",{id:\"button\",onClick:this.insertionSort},\"Insertion Sort\"),/*#__PURE__*/React.createElement(\"button\",{id:\"button\",onClick:this.selectionSort},\"Selection Sort\")),/*#__PURE__*/React.createElement(\"div\",{className:\"second\"},/*#__PURE__*/React.createElement(\"div\",{className:\"Panel\",style:{float:\"left\"}},/*#__PURE__*/React.createElement(\"label\",null,\"Array Size:       \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"array-size\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"label\",null,\"Automation Speed: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"speed\"}),/*#__PURE__*/React.createElement(\"button\",{id:\"submit\",onClick:this.getText},\"Enter\"),/*#__PURE__*/React.createElement(\"p\",null,tem,/*#__PURE__*/React.createElement(\"br\",null),tem1)),/*#__PURE__*/React.createElement(\"div\",{className:\"array-container\",id:\"whole\",style:{float:\"right\"}},this.state.array.map(function(value,id){return/*#__PURE__*/React.createElement(\"div\",{className:\"array-bar\",id:\"element\",key:id,style:{height:value}});}))),/*#__PURE__*/React.createElement(Footer,null));}}]);return Sorting;}(React.Component);function randomIntFromInterval(min,max){return Math.floor(Math.random()*(max-min+1)+min);}function testingAlgorithm(array1,array2){var i;if(array1.length===array2.length){for(i=0;i<array1.length;i++){if(array1[i]!==array2[i]){return false;}}if(i===array1.length){return true;}}else{return false;}}export default Sorting;","map":{"version":3,"sources":["/home/shubham/HTML workspace/projects/Sorting-Visualizer/src/Sorting/Sorting.js"],"names":["React","getmergesortanimations","bubbleSort","insertionSort","getQuickSortAnimations","selectionSort","Footer","COMPARISON_COLOR","SWAP_COLOR","ORIGINAL_COLOR","ARRAY_SIZE","AUTOMATION_SPEED","flag","Sorting","state","array","resetArray","bind","mergeSort","quickSort","getText","i","push","randomIntFromInterval","setState","arrayBars","document","getElementsByClassName","sortedArray","animations","testSortedArray","slice","sort","a","b","testingAlgorithm","console","log","length","colorChange","barOne","barTwo","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","height","barThree","barThreeStyle","event","x","getElementById","value","y","isNaN","alert","Number","tem","tem1","float","map","id","Component","min","max","Math","floor","random","array1","array2"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Sorting.css\";\nimport getmergesortanimations from \"../Algorithms/mergeSort\";\nimport bubbleSort from \"../Algorithms/bubbleSort\";\nimport insertionSort from \"../Algorithms/insertionSort\";\nimport getQuickSortAnimations from \"../Algorithms/quickSort\";\nimport selectionSort from \"../Algorithms/selectionSort\";\nimport Footer from \"./Footer.js\"\n\n\n\nconst COMPARISON_COLOR = \"green\"\nconst SWAP_COLOR = \"red\"\nconst ORIGINAL_COLOR = \"#008CBA\"\nlet ARRAY_SIZE = 200\nlet AUTOMATION_SPEED = 1\nlet flag = false\n\nclass Sorting extends React.Component{\n    \n    constructor(){\n        super();\n        this.state = {\n            array: [],\n\n        }; \n        this.resetArray = this.resetArray.bind(this)\n        this.mergeSort = this.mergeSort.bind(this)\n        this.quickSort = this.quickSort.bind(this)\n        this.insertionSort = this.insertionSort.bind(this)\n        this.bubbleSort = this.bubbleSort.bind(this)\n        this.selectionSort = this.selectionSort.bind(this)\n        this.getText = this.getText.bind(this)\n    }\n    \n\n    componentDidMount(){\n        this.resetArray();\n    }\n\n    resetArray(){\n        const array = [];\n        let i = ARRAY_SIZE;\n        while(i--){\n            array.push(randomIntFromInterval(5, 500))\n        }\n        this.setState({array})\n    }\n    mergeSort(){\n        let arrayBars = document.getElementsByClassName(\"array-bar\")\n \n        const [sortedArray, animations] = getmergesortanimations(this.state.array)\n        const testSortedArray = this.state.array.slice().sort((a, b) => a-b)\n        testingAlgorithm(testSortedArray, sortedArray) ? console.log(\"array is sorted properly\") : console.log(\"array is not sorted properly\");\n\n        const length = animations.length\n        for(let i = 0; i < length; i++){\n            const colorChange = (i % 3 !== 2)\n            if(colorChange){\n                const barOne = animations[i][1];\n                const barTwo = animations[i][2];\n                const barOneStyle = arrayBars[barOne].style;\n                const barTwoStyle = arrayBars[barTwo].style;\n                const color = (i % 3 === 0) ? SWAP_COLOR : ORIGINAL_COLOR\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color\n                    barTwoStyle.backgroundColor = color\n                }, i*AUTOMATION_SPEED)\n            }\n            else{\n                const barOne = animations[i][1];\n                const barOneStyle = arrayBars[barOne].style;\n\n                setTimeout(() => {\n                    barOneStyle.height = animations[i][2] + 'px'\n                }, i*AUTOMATION_SPEED)\n            }\n            if(i === (length-1)){\n                setTimeout(() => {\n                    this.setState({array: sortedArray})\n                }, (i+1) * AUTOMATION_SPEED)\n            }\n        }\n\n    }\n    quickSort(){\n        let arrayBars = document.getElementsByClassName(\"array-bar\")\n        const [sortedArray, animations] = getQuickSortAnimations(this.state.array)\n\n        const testSortedArray = this.state.array.slice().sort((a,b) => a-b);\n\n        testingAlgorithm(testSortedArray, sortedArray) ? console.log(\"array is sorted properly\") : console.log(\"array is not sorted properly\");\n\n\n        const length = animations.length\n        for(let i = 0; i < length; i++){\n            const colorChange = (i % 2 === 0)\n            const barOne = animations[i][1];\n            const barTwo = animations[i][2];\n\n            const barOneStyle = arrayBars[barOne].style;\n            const barTwoStyle = arrayBars[barTwo].style;\n            if(colorChange){\n                if(animations[i][0] === 'c'){\n                    const barThree = animations[i][3];\n                    const barThreeStyle = arrayBars[barThree].style;\n\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = COMPARISON_COLOR  \n                        barTwoStyle.backgroundColor = 'yellow'\n                        barThreeStyle.backgroundColor = COMPARISON_COLOR\n                    }, i * AUTOMATION_SPEED)\n                }\n                else if(animations[i][0] === 's'){\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = SWAP_COLOR\n                        barTwoStyle.backgroundColor = SWAP_COLOR\n                        barOneStyle.height = animations[i][3] + 'px'\n                        barTwoStyle.height = animations[i][4] + 'px'\n                    }, i * AUTOMATION_SPEED)\n\n                }\n\n            }\n            else {\n                if(animations[i][0] === 'c'){\n                    const barThree = animations[i][3];\n                    const barThreeStyle = arrayBars[barThree].style;\n\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = ORIGINAL_COLOR\n                        barTwoStyle.backgroundColor = ORIGINAL_COLOR\n                        barThreeStyle.backgroundColor = ORIGINAL_COLOR\n                    }, i * AUTOMATION_SPEED)\n                }\n                else if(animations[i][0] === 's'){\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = ORIGINAL_COLOR\n                        barTwoStyle.backgroundColor = ORIGINAL_COLOR\n                    }, i * AUTOMATION_SPEED)\n                }\n\n            }\n            if(i === (length-1)){\n                setTimeout(() => {\n                    this.setState({array: sortedArray})\n                }, (i+1) * AUTOMATION_SPEED)\n            }\n        }\n    }\n    selectionSort(){\n        let arrayBars = document.getElementsByClassName(\"array-bar\")\n        const testSortedArray = this.state.array.slice().sort((a,b) => a-b);\n        const [sortedArray, animations] = selectionSort(this.state.array, arrayBars);\n\n\n        testingAlgorithm(testSortedArray, sortedArray) ? console.log(\"array is sorted properly\") : console.log(\"array is not sorted properly\");\n        \n        const length = animations.length\n        for(let i = 0; i < length; i++){\n            const colorChange = (i % 2 === 0)\n            const barOne = animations[i][1];\n            const barTwo = animations[i][2];\n            const barOneStyle = arrayBars[barOne].style;\n            const barTwoStyle = arrayBars[barTwo].style;\n            \n            if(colorChange){\n                if(animations[i][0] === 'c'){\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = COMPARISON_COLOR\n                        barTwoStyle.backgroundColor = COMPARISON_COLOR\n                    }, i * AUTOMATION_SPEED)\n                }\n                else if(animations[i][0] === 's'){\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = SWAP_COLOR\n                        barTwoStyle.backgroundColor = SWAP_COLOR\n                        barOneStyle.height = animations[i][3] + 'px'\n                        barTwoStyle.height = animations[i][4] + 'px'\n                    }, i * AUTOMATION_SPEED)\n\n                }\n            }\n            else {\n                if(animations[i][0] === 'c'){\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = ORIGINAL_COLOR\n                        barTwoStyle.backgroundColor = ORIGINAL_COLOR\n                    }, i * AUTOMATION_SPEED)\n                }\n                else if(animations[i][0] === 's'){\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = ORIGINAL_COLOR\n                        barTwoStyle.backgroundColor = ORIGINAL_COLOR\n                    }, i * AUTOMATION_SPEED)\n                }\n            }\n            if(i === (length-1)){\n                setTimeout(() => {\n                    this.setState({array: sortedArray})\n                }, (i+1) * AUTOMATION_SPEED)\n            }\n        }\n\n    }\n\n    bubbleSort(){\n        let arrayBars = document.getElementsByClassName(\"array-bar\")\n        const testSortedArray = this.state.array.slice().sort((a,b) => a-b);\n        const [sortedArray, animations] = bubbleSort(this.state.array, arrayBars);\n\n        testingAlgorithm(testSortedArray, sortedArray) ? console.log(\"array is sorted properly\") : console.log(\"array is not sorted properly\");\n        \n        const length = animations.length\n        for(let i = 0; i < length; i++){\n            const colorChange = (i % 2 === 0)\n            const barOne = animations[i][1];\n            const barTwo = animations[i][2];\n            const barOneStyle = arrayBars[barOne].style;\n            const barTwoStyle = arrayBars[barTwo].style;\n            \n            if(colorChange){\n                if(animations[i][0] === 'c'){\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = COMPARISON_COLOR\n                        barTwoStyle.backgroundColor = COMPARISON_COLOR\n                    }, i * AUTOMATION_SPEED)\n                }\n                else if(animations[i][0] === 's'){\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = SWAP_COLOR\n                        barTwoStyle.backgroundColor = SWAP_COLOR\n                        barOneStyle.height = animations[i][3] + 'px'\n                        barTwoStyle.height = animations[i][4] + 'px'\n                    }, i * AUTOMATION_SPEED)\n\n                }\n            }\n            else {\n                if(animations[i][0] === 'c'){\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = ORIGINAL_COLOR\n                        barTwoStyle.backgroundColor = ORIGINAL_COLOR\n                    }, i * AUTOMATION_SPEED)\n                }\n                else if(animations[i][0] === 's'){\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = ORIGINAL_COLOR\n                        barTwoStyle.backgroundColor = ORIGINAL_COLOR\n                    }, i * AUTOMATION_SPEED)\n                }\n            }\n            if(i === (length-1)){\n                setTimeout(() => {\n                    this.setState({array: sortedArray})\n                }, (i+1) * AUTOMATION_SPEED)\n            }\n        }\n        \n    }\n\n    insertionSort(){\n        let arrayBars = document.getElementsByClassName(\"array-bar\")\n        const testSortedArray = this.state.array.slice().sort((a,b) => a-b);\n        const [sortedArray, animations] = insertionSort(this.state.array, arrayBars);\n\n\n        testingAlgorithm(testSortedArray, sortedArray) ? console.log(\"array is sorted properly\") : console.log(\"array is not sorted properly\");\n        \n        const length = animations.length\n        for(let i = 0; i < length; i++){\n            const colorChange = (i % 2 === 0)\n            const barOne = animations[i][1];\n            const barTwo = animations[i][2];\n            const barOneStyle = arrayBars[barOne].style\n            const barTwoStyle = arrayBars[barTwo].style\n            \n            if(colorChange){\n                if(animations[i][0] === 'c'){\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = COMPARISON_COLOR\n                        barTwoStyle.backgroundColor = COMPARISON_COLOR\n                    }, i * AUTOMATION_SPEED)\n                }\n                else if(animations[i][0] === 's'){\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = SWAP_COLOR\n                        barTwoStyle.backgroundColor = SWAP_COLOR\n                        barOneStyle.height = animations[i][3] + 'px'\n                        barTwoStyle.height = animations[i][4] + 'px'\n                    }, i * AUTOMATION_SPEED)\n\n                }\n            }\n            else {\n                if(animations[i][0] === 'c'){\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = ORIGINAL_COLOR\n                        barTwoStyle.backgroundColor = ORIGINAL_COLOR\n                    }, i * AUTOMATION_SPEED)\n                }\n                else if(animations[i][0] === 's'){\n                    setTimeout(() => {\n                        barOneStyle.backgroundColor = ORIGINAL_COLOR\n                        barTwoStyle.backgroundColor = ORIGINAL_COLOR\n                    }, i * AUTOMATION_SPEED)\n                }\n            }\n            if(i === (length-1)){\n                setTimeout(() => {\n                    this.setState({array: sortedArray})\n                }, (i+1) * AUTOMATION_SPEED)\n            }\n        }\n    }\n\n    getText(event){\n        flag = true\n        var x = document.getElementById(\"array-size\").value\n        var y = document.getElementById(\"speed\").value\n        if(isNaN(x)){\n            alert('Please, Enter a number')\n        }\n        else if (x <= 400 & x >= 10){\n            ARRAY_SIZE = Number(x)\n            this.resetArray()\n        }\n        else{\n            alert(\"Please, Enter Array Size a number between 10 and 1000\")\n        }\n        if(isNaN(y)){\n            alert('Please, Enter a number')\n\n        }\n        else if (y <= 2000 & y >= 1){\n            AUTOMATION_SPEED = y\n            this.resetArray()\n        }\n        else{\n            alert(\"Please, Enter Automation Speed a number between 10 and 2000\")\n        }\n    }\n    \n\n    render(){\n        let tem, tem1;\n        if(flag){\n            tem = \"The Array size is \" + ARRAY_SIZE\n            tem1 = \"The Automation speed is \" + AUTOMATION_SPEED\n        }\n        else{\n            tem = \"*Default size of Array is 200\"\n            tem1 = \"*Default speed of Automation is 1\"\n        }\n        return(\n            <div>\n                <div className=\"button-container\">\n                 <button id=\"button\" float={\"left\"} onClick={this.resetArray}>Reset the Array</button>\n                 <button id=\"button\" onClick={this.mergeSort}>Merge Sort</button>\n                 <button id=\"button\" onClick={this.quickSort}>Quick Sort</button>\n                 <button id=\"button\" onClick={this.bubbleSort}>Bubble Sort</button>   \n                 <button id=\"button\" onClick={this.insertionSort}>Insertion Sort</button>\n                 <button id=\"button\" onClick={this.selectionSort}>Selection Sort</button>\n                </div>\n                <div className=\"second\">\n                    <div className=\"Panel\" style={{float: \"left\"}}>\n                        <label>Array Size:       </label><input type=\"text\" id=\"array-size\"></input><br></br>\n                        <label>Automation Speed: </label><input type=\"text\" id=\"speed\"></input>\n                        <button id=\"submit\" onClick={this.getText}>Enter</button>\n                        <p>{tem}<br></br>{tem1}</p>\n                    </div>\n                    <div className=\"array-container\" id=\"whole\" style={{float:\"right\"}}>\n                    {this.state.array.map((value, id) => (\n                        <div\n                            className=\"array-bar\" \n                            id=\"element\"\n                            key={id} \n                            style={{height: value}}\n                        >\n                        </div>\n                    ))}\n                    </div>\n                </div>\n                \n\n                \n                \n               <Footer></Footer>\n            </div>\n        )\n    }\n}\n\n\nfunction randomIntFromInterval(min, max){\n    return Math.floor(Math.random() *  (max - min + 1) + min);\n}\n\nfunction testingAlgorithm(array1, array2){\n    let i;\n    if(array1.length === array2.length){\n        for(i = 0; i < array1.length; i++){\n            if(array1[i] !== array2[i]){\n                return false\n            }\n        }\n        if(i === array1.length){\n            return true;\n        }\n    }\n    else{\n        return false\n    }\n}\n\nexport default Sorting;\n"]},"metadata":{},"sourceType":"module"}