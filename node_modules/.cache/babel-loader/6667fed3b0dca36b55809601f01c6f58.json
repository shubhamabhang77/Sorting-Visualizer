{"ast":null,"code":"import React from \"react\";\nexport default function getQuickSortAnimations(array) {\n  const animations = [];\n  const length = array.length;\n  console.log(array);\n  array = quickSort(array, 0, length - 1, animations);\n  console.log(array);\n  return [array, animations];\n}\n\nfunction quickSort(array, start, end, animations) {\n  let pIndex;\n\n  if (start < end) {\n    [pIndex, array] = partition(array, start, end, animations);\n    array = quickSort(array, start, pIndex - 1, animations);\n    array = quickSort(array, pIndex + 1, end, animations);\n  }\n\n  return array;\n}\n\nfunction partition(array, start, end) {\n  let i = 0;\n  let pivot = array[end];\n  console.log(\"pivot value \", pivot);\n  let pIndex = start;\n\n  for (i = start; i < end; i++) {\n    if (array[i] < pivot) {\n      swap(array[i], array[pIndex++]);\n      console.log(\"shubham\", array[i], array[pIndex - 1]);\n    }\n  }\n\n  swap(array[end], array[pIndex]);\n  console.log(\"shubham\", array[i], array[pIndex - 1]);\n  console.log(\"after swapping\", array);\n  return [pIndex, array];\n}\n\nfunction swap(a, b) {\n  let temp;\n  temp = a;\n  a = b;\n  b = temp;\n}","map":{"version":3,"sources":["/home/shubham/HTML workspace/projects/Sorting-Visualizer/src/Algorithms/quickSort.js"],"names":["React","getQuickSortAnimations","array","animations","length","console","log","quickSort","start","end","pIndex","partition","i","pivot","swap","a","b","temp"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,sBAAT,CAAgCC,KAAhC,EAAsC;AACjD,QAAMC,UAAU,GAAG,EAAnB;AACA,QAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAA,EAAAA,KAAK,GAAGK,SAAS,CAACL,KAAD,EAAQ,CAAR,EAAWE,MAAM,GAAC,CAAlB,EAAqBD,UAArB,CAAjB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,SAAO,CAACA,KAAD,EAAQC,UAAR,CAAP;AACH;;AAID,SAASI,SAAT,CAAmBL,KAAnB,EAA0BM,KAA1B,EAAiCC,GAAjC,EAAsCN,UAAtC,EAAiD;AAC7C,MAAIO,MAAJ;;AACA,MAAGF,KAAK,GAAGC,GAAX,EAAe;AACX,KAACC,MAAD,EAASR,KAAT,IAAkBS,SAAS,CAACT,KAAD,EAAQM,KAAR,EAAeC,GAAf,EAAoBN,UAApB,CAA3B;AACAD,IAAAA,KAAK,GAAGK,SAAS,CAACL,KAAD,EAAQM,KAAR,EAAeE,MAAM,GAAC,CAAtB,EAAyBP,UAAzB,CAAjB;AACAD,IAAAA,KAAK,GAAGK,SAAS,CAACL,KAAD,EAAQQ,MAAM,GAAC,CAAf,EAAkBD,GAAlB,EAAuBN,UAAvB,CAAjB;AACH;;AACD,SAAOD,KAAP;AACH;;AAED,SAASS,SAAT,CAAmBT,KAAnB,EAA0BM,KAA1B,EAAiCC,GAAjC,EAAqC;AACjC,MAAIG,CAAC,GAAG,CAAR;AACA,MAAIC,KAAK,GAAGX,KAAK,CAACO,GAAD,CAAjB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BO,KAA5B;AACA,MAAIH,MAAM,GAAGF,KAAb;;AACA,OAAII,CAAC,GAAGJ,KAAR,EAAeI,CAAC,GAAGH,GAAnB,EAAwBG,CAAC,EAAzB,EAA4B;AACxB,QAAGV,KAAK,CAACU,CAAD,CAAL,GAAWC,KAAd,EAAoB;AAChBC,MAAAA,IAAI,CAACZ,KAAK,CAACU,CAAD,CAAN,EAAWV,KAAK,CAACQ,MAAM,EAAP,CAAhB,CAAJ;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAK,CAACU,CAAD,CAA5B,EAAiCV,KAAK,CAACQ,MAAM,GAAC,CAAR,CAAtC;AACH;AACJ;;AACDI,EAAAA,IAAI,CAACZ,KAAK,CAACO,GAAD,CAAN,EAAaP,KAAK,CAACQ,MAAD,CAAlB,CAAJ;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAK,CAACU,CAAD,CAA5B,EAAiCV,KAAK,CAACQ,MAAM,GAAC,CAAR,CAAtC;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,KAA9B;AACA,SAAO,CAACQ,MAAD,EAASR,KAAT,CAAP;AACH;;AAED,SAASY,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAmB;AACf,MAAIC,IAAJ;AACAA,EAAAA,IAAI,GAAGF,CAAP;AACAA,EAAAA,CAAC,GAAGC,CAAJ;AACAA,EAAAA,CAAC,GAAGC,IAAJ;AACH","sourcesContent":["import React from \"react\";\n\n\nexport default function getQuickSortAnimations(array){\n    const animations = [];\n    const length = array.length\n    console.log(array)\n    array = quickSort(array, 0, length-1, animations);\n    console.log(array)\n\n    return [array, animations];\n}\n\n\n\nfunction quickSort(array, start, end, animations){\n    let pIndex\n    if(start < end){\n        [pIndex, array] = partition(array, start, end, animations)\n        array = quickSort(array, start, pIndex-1, animations)\n        array = quickSort(array, pIndex+1, end, animations)\n    }\n    return array\n}\n\nfunction partition(array, start, end){\n    let i = 0\n    let pivot = array[end]\n    console.log(\"pivot value \", pivot)\n    let pIndex = start\n    for(i = start; i < end; i++){\n        if(array[i] < pivot){\n            swap(array[i], array[pIndex++])\n            console.log(\"shubham\", array[i], array[pIndex-1])\n        }\n    }\n    swap(array[end], array[pIndex])  \n    console.log(\"shubham\", array[i], array[pIndex-1])\n    console.log(\"after swapping\", array)\n    return [pIndex, array]\n}\n\nfunction swap(a, b){\n    let temp\n    temp = a\n    a = b\n    b = temp\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}